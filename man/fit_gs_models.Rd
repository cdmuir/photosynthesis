% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_gs_models.R
\name{fit_gs_mod_ballberry}
\alias{fit_gs_mod_ballberry}
\alias{fit_gs_mod_leuning}
\alias{fit_gs_mod_medlyn}
\title{Fitting stomatal conductance models}
\usage{
fit_gs_mod_ballberry(
  data,
  varnames = list(A_net = "A_net", C_air = "C_air", g_sw = "g_sw", RH = "RH")
)

fit_gs_mod_leuning(
  data,
  D0,
  varnames = list(A_net = "A_net", C_air = "C_air", g_sw = "g_sw", VPD = "VPD")
)

fit_gs_mod_medlyn(
  data,
  varnames = list(A_net = "A_net", C_air = "C_air", g_sw = "g_sw", VPD = "VPD"),
  full_model = FALSE
)
}
\arguments{
\item{data}{Dataframe}

\item{varnames}{Variable names. 

For the Ball-Berry model: varnames = list(A_net = "A_net", C_air = "C_air",
g_sw = "g_sw", RH = "RH") where A_net is net CO2 assimilation, C_air is CO2
concentration at the leaf surface in umol mol-1, g_sw is stomatal conductance
to H2O, and RH is relative humidity as a proportion.

For the Leuning model: varnames = list(A_net = "A_net", C_air = "C_air",
g_sw = "g_sw", VPD = "VPD") where A_net is net CO2 assimilation, C_air is CO2
concentration at the leaf surface in umol mol-1, g_sw is stomatal conductance
to H2O, and VPD is leaf to air vapor pressure deficit in kPa.

For the Medlyn et al. 2011 models: varnames = list(A_net = "A_net", C_air = "C_air",
g_sw = "g_sw", VPD = "VPD") where A_net is net CO2 assimilation, C_air is CO2
concentration at the leaf surface in umol mol-1, g_sw is stomatal conductance
to H2O, and VPD is leaf to air vapor pressure deficit in kPa.}

\item{D0}{Vapor pressure sensitivity of stomata (Leuning 1995)}

\item{full_model}{Fit the full model? (Medlyn et al. 2011)}
}
\value{
fit_gs_mod_ballberry fits the Ball et al. (1987) model of stomatal
conductance. Note that RH should be converted to a proportion before fitting
the model.

fit_gs_mod_leuning fits the Leuning (1995) model of stomatal
conductance.

fit_gs_mod_medlyn fits the Medlyn et al (2011) model of stomatal
conductance. Both the reduced and full models can be fit.

REFERENCES

Ball JT, Woodrow IE, Berry JA. 1987. A model predicting stomatal 
conductance and its contribution to the control of photosynthesis
under different environmental conditions, in Progress in 
Photosynthesis Research, Proceedings of the VII International 
Congress on Photosynthesis, vol. 4, edited by I. Biggins, pp. 
221â€“224, Martinus Nijhoff, Dordrecht, Netherlands.

Leuning R. 1995. A critical appraisal of a coupled stomatal-
photosynthesis model for C3 plants. Plant Cell Environ 18:339-357

Medlyn BE, Duursma RA, Eamus D, Ellsworth DS, Prentice IC, Barton
CVM, Crous KY, Angelis PD, Freeman M, Wingate L. 2011. Reconciling
the optimal and empirical approaches to modelling stomatal 
conductance. Glob Chang Biol 17:2134-2144
}
\description{
Fitting stomatal conductance models
}
\examples{
\dontrun{
#Read in your data
#Note that this data is coming from data supplied by the package
#hence the complicated argument in read.csv()
#This dataset is a CO2 by light response curve for a single sunflower
data <- read.csv(system.file("extdata", "A_Ci_Q_data_1.csv", 
                             package = "plantecophystools"))

#FITTING THE BALL-BERRY MODEL

#Convert RH to proportion
data$RH <- data$RHcham / 100

#Fit the Ball-Berry model
fit <- fit_gs_mod_ballberry(data = data,
                            varnames = list(A_net = "A",
                                            C_air = "Ca",
                                            g_sw = "gsw",
                                            RH = "RH"))

#View model summary
summary(fit[[1]])

#View model output
fit[[2]]

#View graph
fit[[3]]

#Fit many g_sw models
#Set your grouping variable
#Here we are grouping by Qin and individual
data$Q_2 <- as.factor((round(data$Qin, digits = 0)))

fits <- fit_many(data,
                 varnames = list(A_net = "A",
                                 C_air = "Ca",
                                 g_sw = "gsw",
                                 RH = "RH"),
                 funct = fit_gs_mod_ballberry,
                 group = "Q_2")

#Look at 2nd group information
#Model summary
summary(fits[[2]][[1]])

#Model parameters
fits[[2]][[2]]

#Graph
fits[[2]][[3]]

#Compile parameter outputs
pars <- compile_data(data = fits,
                     output_type = "dataframe",
                     list_element = 2)

#Convert group variable back to numeric
pars$ID <- as.numeric(pars$ID)

#Take quick look at light response of intercept parameters
plot(g0 ~ ID, pars)

#Compile graphs
graphs <- compile_data(data = fits,
                       output_type = "list",
                       list_element = 3)

#Look at 3rd graph
graphs[[3]]


#FITTING THE LEUNING MODEL

fit <- fit_gs_mod_leuning(data = data,
                            D0 = 3,
                            varnames = list(A_net = "A",
                                            C_air = "Ca",
                                            g_sw = "gsw",
                                            VPD = "VPDleaf"))

#View model summary
summary(fit[[1]])

#View model output
fit[[2]]

#View graph
fit[[3]]

#Fit many g_sw models
#Set your grouping variable
#Here we are grouping by Qin and individual
data$Q_2 <- as.factor((round(data$Qin, digits = 0)))

fits <- fit_many(data,
                 varnames = list(A_net = "A",
                                 C_air = "Ca",
                                 g_sw = "gsw",
                                 VPD = "VPDleaf"),
                 funct = fit_gs_mod_leuning,
                 group = "Q_2")

#Look at 2nd group information
#Model summary
summary(fits[[2]][[1]])

#Model parameters
fits[[2]][[2]]

#Graph
fits[[2]][[3]]

#Compile parameter outputs
pars <- compile_data(data = fits,
                     output_type = "dataframe",
                     list_element = 2)

#Convert group variable back to numeric
pars$ID <- as.numeric(pars$ID)

#Take quick look at light response of intercept parameters
plot(g0 ~ ID, pars)

#Compile graphs
graphs <- compile_data(data = fits,
                       output_type = "list",
                       list_element = 3)

#Look at 3rd graph
graphs[[3]]

#FITTING THE FULL MEDLYN MODEL
fit <- fit_gs_mod_medlyn(data = data,
                            full_model = TRUE,
                            varnames = list(A_net = "A",
                                            C_air = "Ca",
                                            g_sw = "gsw",
                                            VPD = "VPDleaf"))

#View model summary
summary(fit[[1]])

#View model output
fit[[2]]

#View graph
fit[[3]]

#Fit many g_sw models
#Set your grouping variable
#Here we are grouping by Qin and individual
data$Q_2 <- as.factor((round(data$Qin, digits = 0)))

fits <- fit_many(data,
                 varnames = list(A_net = "A",
                                 C_air = "Ca",
                                 g_sw = "gsw",
                                 VPD = "VPDleaf"),
                 funct = fit_gs_mod_medlyn,
                 group = "Q_2")

#Look at 2nd group information
#Model summary
summary(fits[[2]][[1]])

#Model parameters
fits[[2]][[2]]

#Graph
fits[[2]][[3]]

#Compile parameter outputs
pars <- compile_data(data = fits,
                     output_type = "dataframe",
                     list_element = 2)

#Convert group variable back to numeric
pars$ID <- as.numeric(pars$ID)

#Take quick look at light response of intercept parameters
plot(g0 ~ ID, pars)

#Compile graphs
graphs <- compile_data(data = fits,
                       output_type = "list",
                       list_element = 3)

#Look at 3rd graph
graphs[[3]]

}

}
